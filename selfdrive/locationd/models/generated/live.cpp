#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_1920292565159361144) {
   out_1920292565159361144[0] = 0;
   out_1920292565159361144[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_1920292565159361144[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_1920292565159361144[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_1920292565159361144[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_1920292565159361144[5] = -sin(in_vec[1]);
   out_1920292565159361144[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_1920292565159361144[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_1920292565159361144[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_1920292565159361144[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_1920292565159361144[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_1920292565159361144[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_1920292565159361144[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_1920292565159361144[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_1920292565159361144[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_1920292565159361144[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_1920292565159361144[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_1920292565159361144[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_8960971141736065854) {
   out_8960971141736065854[0] = delta_x[0] + nom_x[0];
   out_8960971141736065854[1] = delta_x[1] + nom_x[1];
   out_8960971141736065854[2] = delta_x[2] + nom_x[2];
   out_8960971141736065854[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_8960971141736065854[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_8960971141736065854[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_8960971141736065854[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_8960971141736065854[7] = delta_x[6] + nom_x[7];
   out_8960971141736065854[8] = delta_x[7] + nom_x[8];
   out_8960971141736065854[9] = delta_x[8] + nom_x[9];
   out_8960971141736065854[10] = delta_x[9] + nom_x[10];
   out_8960971141736065854[11] = delta_x[10] + nom_x[11];
   out_8960971141736065854[12] = delta_x[11] + nom_x[12];
   out_8960971141736065854[13] = delta_x[12] + nom_x[13];
   out_8960971141736065854[14] = delta_x[13] + nom_x[14];
   out_8960971141736065854[15] = delta_x[14] + nom_x[15];
   out_8960971141736065854[16] = delta_x[15] + nom_x[16];
   out_8960971141736065854[17] = delta_x[16] + nom_x[17];
   out_8960971141736065854[18] = delta_x[17] + nom_x[18];
   out_8960971141736065854[19] = delta_x[18] + nom_x[19];
   out_8960971141736065854[20] = delta_x[19] + nom_x[20];
   out_8960971141736065854[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_6092473996019335073) {
   out_6092473996019335073[0] = -nom_x[0] + true_x[0];
   out_6092473996019335073[1] = -nom_x[1] + true_x[1];
   out_6092473996019335073[2] = -nom_x[2] + true_x[2];
   out_6092473996019335073[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_6092473996019335073[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_6092473996019335073[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_6092473996019335073[6] = -nom_x[7] + true_x[7];
   out_6092473996019335073[7] = -nom_x[8] + true_x[8];
   out_6092473996019335073[8] = -nom_x[9] + true_x[9];
   out_6092473996019335073[9] = -nom_x[10] + true_x[10];
   out_6092473996019335073[10] = -nom_x[11] + true_x[11];
   out_6092473996019335073[11] = -nom_x[12] + true_x[12];
   out_6092473996019335073[12] = -nom_x[13] + true_x[13];
   out_6092473996019335073[13] = -nom_x[14] + true_x[14];
   out_6092473996019335073[14] = -nom_x[15] + true_x[15];
   out_6092473996019335073[15] = -nom_x[16] + true_x[16];
   out_6092473996019335073[16] = -nom_x[17] + true_x[17];
   out_6092473996019335073[17] = -nom_x[18] + true_x[18];
   out_6092473996019335073[18] = -nom_x[19] + true_x[19];
   out_6092473996019335073[19] = -nom_x[20] + true_x[20];
   out_6092473996019335073[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_6450239707838081688) {
   out_6450239707838081688[0] = 1.0;
   out_6450239707838081688[1] = 0;
   out_6450239707838081688[2] = 0;
   out_6450239707838081688[3] = 0;
   out_6450239707838081688[4] = 0;
   out_6450239707838081688[5] = 0;
   out_6450239707838081688[6] = 0;
   out_6450239707838081688[7] = 0;
   out_6450239707838081688[8] = 0;
   out_6450239707838081688[9] = 0;
   out_6450239707838081688[10] = 0;
   out_6450239707838081688[11] = 0;
   out_6450239707838081688[12] = 0;
   out_6450239707838081688[13] = 0;
   out_6450239707838081688[14] = 0;
   out_6450239707838081688[15] = 0;
   out_6450239707838081688[16] = 0;
   out_6450239707838081688[17] = 0;
   out_6450239707838081688[18] = 0;
   out_6450239707838081688[19] = 0;
   out_6450239707838081688[20] = 0;
   out_6450239707838081688[21] = 0;
   out_6450239707838081688[22] = 1.0;
   out_6450239707838081688[23] = 0;
   out_6450239707838081688[24] = 0;
   out_6450239707838081688[25] = 0;
   out_6450239707838081688[26] = 0;
   out_6450239707838081688[27] = 0;
   out_6450239707838081688[28] = 0;
   out_6450239707838081688[29] = 0;
   out_6450239707838081688[30] = 0;
   out_6450239707838081688[31] = 0;
   out_6450239707838081688[32] = 0;
   out_6450239707838081688[33] = 0;
   out_6450239707838081688[34] = 0;
   out_6450239707838081688[35] = 0;
   out_6450239707838081688[36] = 0;
   out_6450239707838081688[37] = 0;
   out_6450239707838081688[38] = 0;
   out_6450239707838081688[39] = 0;
   out_6450239707838081688[40] = 0;
   out_6450239707838081688[41] = 0;
   out_6450239707838081688[42] = 0;
   out_6450239707838081688[43] = 0;
   out_6450239707838081688[44] = 1.0;
   out_6450239707838081688[45] = 0;
   out_6450239707838081688[46] = 0;
   out_6450239707838081688[47] = 0;
   out_6450239707838081688[48] = 0;
   out_6450239707838081688[49] = 0;
   out_6450239707838081688[50] = 0;
   out_6450239707838081688[51] = 0;
   out_6450239707838081688[52] = 0;
   out_6450239707838081688[53] = 0;
   out_6450239707838081688[54] = 0;
   out_6450239707838081688[55] = 0;
   out_6450239707838081688[56] = 0;
   out_6450239707838081688[57] = 0;
   out_6450239707838081688[58] = 0;
   out_6450239707838081688[59] = 0;
   out_6450239707838081688[60] = 0;
   out_6450239707838081688[61] = 0;
   out_6450239707838081688[62] = 0;
   out_6450239707838081688[63] = 0;
   out_6450239707838081688[64] = 0;
   out_6450239707838081688[65] = 0;
   out_6450239707838081688[66] = -0.5*state[4];
   out_6450239707838081688[67] = -0.5*state[5];
   out_6450239707838081688[68] = -0.5*state[6];
   out_6450239707838081688[69] = 0;
   out_6450239707838081688[70] = 0;
   out_6450239707838081688[71] = 0;
   out_6450239707838081688[72] = 0;
   out_6450239707838081688[73] = 0;
   out_6450239707838081688[74] = 0;
   out_6450239707838081688[75] = 0;
   out_6450239707838081688[76] = 0;
   out_6450239707838081688[77] = 0;
   out_6450239707838081688[78] = 0;
   out_6450239707838081688[79] = 0;
   out_6450239707838081688[80] = 0;
   out_6450239707838081688[81] = 0;
   out_6450239707838081688[82] = 0;
   out_6450239707838081688[83] = 0;
   out_6450239707838081688[84] = 0;
   out_6450239707838081688[85] = 0;
   out_6450239707838081688[86] = 0;
   out_6450239707838081688[87] = 0.5*state[3];
   out_6450239707838081688[88] = 0.5*state[6];
   out_6450239707838081688[89] = -0.5*state[5];
   out_6450239707838081688[90] = 0;
   out_6450239707838081688[91] = 0;
   out_6450239707838081688[92] = 0;
   out_6450239707838081688[93] = 0;
   out_6450239707838081688[94] = 0;
   out_6450239707838081688[95] = 0;
   out_6450239707838081688[96] = 0;
   out_6450239707838081688[97] = 0;
   out_6450239707838081688[98] = 0;
   out_6450239707838081688[99] = 0;
   out_6450239707838081688[100] = 0;
   out_6450239707838081688[101] = 0;
   out_6450239707838081688[102] = 0;
   out_6450239707838081688[103] = 0;
   out_6450239707838081688[104] = 0;
   out_6450239707838081688[105] = 0;
   out_6450239707838081688[106] = 0;
   out_6450239707838081688[107] = 0;
   out_6450239707838081688[108] = -0.5*state[6];
   out_6450239707838081688[109] = 0.5*state[3];
   out_6450239707838081688[110] = 0.5*state[4];
   out_6450239707838081688[111] = 0;
   out_6450239707838081688[112] = 0;
   out_6450239707838081688[113] = 0;
   out_6450239707838081688[114] = 0;
   out_6450239707838081688[115] = 0;
   out_6450239707838081688[116] = 0;
   out_6450239707838081688[117] = 0;
   out_6450239707838081688[118] = 0;
   out_6450239707838081688[119] = 0;
   out_6450239707838081688[120] = 0;
   out_6450239707838081688[121] = 0;
   out_6450239707838081688[122] = 0;
   out_6450239707838081688[123] = 0;
   out_6450239707838081688[124] = 0;
   out_6450239707838081688[125] = 0;
   out_6450239707838081688[126] = 0;
   out_6450239707838081688[127] = 0;
   out_6450239707838081688[128] = 0;
   out_6450239707838081688[129] = 0.5*state[5];
   out_6450239707838081688[130] = -0.5*state[4];
   out_6450239707838081688[131] = 0.5*state[3];
   out_6450239707838081688[132] = 0;
   out_6450239707838081688[133] = 0;
   out_6450239707838081688[134] = 0;
   out_6450239707838081688[135] = 0;
   out_6450239707838081688[136] = 0;
   out_6450239707838081688[137] = 0;
   out_6450239707838081688[138] = 0;
   out_6450239707838081688[139] = 0;
   out_6450239707838081688[140] = 0;
   out_6450239707838081688[141] = 0;
   out_6450239707838081688[142] = 0;
   out_6450239707838081688[143] = 0;
   out_6450239707838081688[144] = 0;
   out_6450239707838081688[145] = 0;
   out_6450239707838081688[146] = 0;
   out_6450239707838081688[147] = 0;
   out_6450239707838081688[148] = 0;
   out_6450239707838081688[149] = 0;
   out_6450239707838081688[150] = 0;
   out_6450239707838081688[151] = 0;
   out_6450239707838081688[152] = 0;
   out_6450239707838081688[153] = 1.0;
   out_6450239707838081688[154] = 0;
   out_6450239707838081688[155] = 0;
   out_6450239707838081688[156] = 0;
   out_6450239707838081688[157] = 0;
   out_6450239707838081688[158] = 0;
   out_6450239707838081688[159] = 0;
   out_6450239707838081688[160] = 0;
   out_6450239707838081688[161] = 0;
   out_6450239707838081688[162] = 0;
   out_6450239707838081688[163] = 0;
   out_6450239707838081688[164] = 0;
   out_6450239707838081688[165] = 0;
   out_6450239707838081688[166] = 0;
   out_6450239707838081688[167] = 0;
   out_6450239707838081688[168] = 0;
   out_6450239707838081688[169] = 0;
   out_6450239707838081688[170] = 0;
   out_6450239707838081688[171] = 0;
   out_6450239707838081688[172] = 0;
   out_6450239707838081688[173] = 0;
   out_6450239707838081688[174] = 0;
   out_6450239707838081688[175] = 1.0;
   out_6450239707838081688[176] = 0;
   out_6450239707838081688[177] = 0;
   out_6450239707838081688[178] = 0;
   out_6450239707838081688[179] = 0;
   out_6450239707838081688[180] = 0;
   out_6450239707838081688[181] = 0;
   out_6450239707838081688[182] = 0;
   out_6450239707838081688[183] = 0;
   out_6450239707838081688[184] = 0;
   out_6450239707838081688[185] = 0;
   out_6450239707838081688[186] = 0;
   out_6450239707838081688[187] = 0;
   out_6450239707838081688[188] = 0;
   out_6450239707838081688[189] = 0;
   out_6450239707838081688[190] = 0;
   out_6450239707838081688[191] = 0;
   out_6450239707838081688[192] = 0;
   out_6450239707838081688[193] = 0;
   out_6450239707838081688[194] = 0;
   out_6450239707838081688[195] = 0;
   out_6450239707838081688[196] = 0;
   out_6450239707838081688[197] = 1.0;
   out_6450239707838081688[198] = 0;
   out_6450239707838081688[199] = 0;
   out_6450239707838081688[200] = 0;
   out_6450239707838081688[201] = 0;
   out_6450239707838081688[202] = 0;
   out_6450239707838081688[203] = 0;
   out_6450239707838081688[204] = 0;
   out_6450239707838081688[205] = 0;
   out_6450239707838081688[206] = 0;
   out_6450239707838081688[207] = 0;
   out_6450239707838081688[208] = 0;
   out_6450239707838081688[209] = 0;
   out_6450239707838081688[210] = 0;
   out_6450239707838081688[211] = 0;
   out_6450239707838081688[212] = 0;
   out_6450239707838081688[213] = 0;
   out_6450239707838081688[214] = 0;
   out_6450239707838081688[215] = 0;
   out_6450239707838081688[216] = 0;
   out_6450239707838081688[217] = 0;
   out_6450239707838081688[218] = 0;
   out_6450239707838081688[219] = 1.0;
   out_6450239707838081688[220] = 0;
   out_6450239707838081688[221] = 0;
   out_6450239707838081688[222] = 0;
   out_6450239707838081688[223] = 0;
   out_6450239707838081688[224] = 0;
   out_6450239707838081688[225] = 0;
   out_6450239707838081688[226] = 0;
   out_6450239707838081688[227] = 0;
   out_6450239707838081688[228] = 0;
   out_6450239707838081688[229] = 0;
   out_6450239707838081688[230] = 0;
   out_6450239707838081688[231] = 0;
   out_6450239707838081688[232] = 0;
   out_6450239707838081688[233] = 0;
   out_6450239707838081688[234] = 0;
   out_6450239707838081688[235] = 0;
   out_6450239707838081688[236] = 0;
   out_6450239707838081688[237] = 0;
   out_6450239707838081688[238] = 0;
   out_6450239707838081688[239] = 0;
   out_6450239707838081688[240] = 0;
   out_6450239707838081688[241] = 1.0;
   out_6450239707838081688[242] = 0;
   out_6450239707838081688[243] = 0;
   out_6450239707838081688[244] = 0;
   out_6450239707838081688[245] = 0;
   out_6450239707838081688[246] = 0;
   out_6450239707838081688[247] = 0;
   out_6450239707838081688[248] = 0;
   out_6450239707838081688[249] = 0;
   out_6450239707838081688[250] = 0;
   out_6450239707838081688[251] = 0;
   out_6450239707838081688[252] = 0;
   out_6450239707838081688[253] = 0;
   out_6450239707838081688[254] = 0;
   out_6450239707838081688[255] = 0;
   out_6450239707838081688[256] = 0;
   out_6450239707838081688[257] = 0;
   out_6450239707838081688[258] = 0;
   out_6450239707838081688[259] = 0;
   out_6450239707838081688[260] = 0;
   out_6450239707838081688[261] = 0;
   out_6450239707838081688[262] = 0;
   out_6450239707838081688[263] = 1.0;
   out_6450239707838081688[264] = 0;
   out_6450239707838081688[265] = 0;
   out_6450239707838081688[266] = 0;
   out_6450239707838081688[267] = 0;
   out_6450239707838081688[268] = 0;
   out_6450239707838081688[269] = 0;
   out_6450239707838081688[270] = 0;
   out_6450239707838081688[271] = 0;
   out_6450239707838081688[272] = 0;
   out_6450239707838081688[273] = 0;
   out_6450239707838081688[274] = 0;
   out_6450239707838081688[275] = 0;
   out_6450239707838081688[276] = 0;
   out_6450239707838081688[277] = 0;
   out_6450239707838081688[278] = 0;
   out_6450239707838081688[279] = 0;
   out_6450239707838081688[280] = 0;
   out_6450239707838081688[281] = 0;
   out_6450239707838081688[282] = 0;
   out_6450239707838081688[283] = 0;
   out_6450239707838081688[284] = 0;
   out_6450239707838081688[285] = 1.0;
   out_6450239707838081688[286] = 0;
   out_6450239707838081688[287] = 0;
   out_6450239707838081688[288] = 0;
   out_6450239707838081688[289] = 0;
   out_6450239707838081688[290] = 0;
   out_6450239707838081688[291] = 0;
   out_6450239707838081688[292] = 0;
   out_6450239707838081688[293] = 0;
   out_6450239707838081688[294] = 0;
   out_6450239707838081688[295] = 0;
   out_6450239707838081688[296] = 0;
   out_6450239707838081688[297] = 0;
   out_6450239707838081688[298] = 0;
   out_6450239707838081688[299] = 0;
   out_6450239707838081688[300] = 0;
   out_6450239707838081688[301] = 0;
   out_6450239707838081688[302] = 0;
   out_6450239707838081688[303] = 0;
   out_6450239707838081688[304] = 0;
   out_6450239707838081688[305] = 0;
   out_6450239707838081688[306] = 0;
   out_6450239707838081688[307] = 1.0;
   out_6450239707838081688[308] = 0;
   out_6450239707838081688[309] = 0;
   out_6450239707838081688[310] = 0;
   out_6450239707838081688[311] = 0;
   out_6450239707838081688[312] = 0;
   out_6450239707838081688[313] = 0;
   out_6450239707838081688[314] = 0;
   out_6450239707838081688[315] = 0;
   out_6450239707838081688[316] = 0;
   out_6450239707838081688[317] = 0;
   out_6450239707838081688[318] = 0;
   out_6450239707838081688[319] = 0;
   out_6450239707838081688[320] = 0;
   out_6450239707838081688[321] = 0;
   out_6450239707838081688[322] = 0;
   out_6450239707838081688[323] = 0;
   out_6450239707838081688[324] = 0;
   out_6450239707838081688[325] = 0;
   out_6450239707838081688[326] = 0;
   out_6450239707838081688[327] = 0;
   out_6450239707838081688[328] = 0;
   out_6450239707838081688[329] = 1.0;
   out_6450239707838081688[330] = 0;
   out_6450239707838081688[331] = 0;
   out_6450239707838081688[332] = 0;
   out_6450239707838081688[333] = 0;
   out_6450239707838081688[334] = 0;
   out_6450239707838081688[335] = 0;
   out_6450239707838081688[336] = 0;
   out_6450239707838081688[337] = 0;
   out_6450239707838081688[338] = 0;
   out_6450239707838081688[339] = 0;
   out_6450239707838081688[340] = 0;
   out_6450239707838081688[341] = 0;
   out_6450239707838081688[342] = 0;
   out_6450239707838081688[343] = 0;
   out_6450239707838081688[344] = 0;
   out_6450239707838081688[345] = 0;
   out_6450239707838081688[346] = 0;
   out_6450239707838081688[347] = 0;
   out_6450239707838081688[348] = 0;
   out_6450239707838081688[349] = 0;
   out_6450239707838081688[350] = 0;
   out_6450239707838081688[351] = 1.0;
   out_6450239707838081688[352] = 0;
   out_6450239707838081688[353] = 0;
   out_6450239707838081688[354] = 0;
   out_6450239707838081688[355] = 0;
   out_6450239707838081688[356] = 0;
   out_6450239707838081688[357] = 0;
   out_6450239707838081688[358] = 0;
   out_6450239707838081688[359] = 0;
   out_6450239707838081688[360] = 0;
   out_6450239707838081688[361] = 0;
   out_6450239707838081688[362] = 0;
   out_6450239707838081688[363] = 0;
   out_6450239707838081688[364] = 0;
   out_6450239707838081688[365] = 0;
   out_6450239707838081688[366] = 0;
   out_6450239707838081688[367] = 0;
   out_6450239707838081688[368] = 0;
   out_6450239707838081688[369] = 0;
   out_6450239707838081688[370] = 0;
   out_6450239707838081688[371] = 0;
   out_6450239707838081688[372] = 0;
   out_6450239707838081688[373] = 1.0;
   out_6450239707838081688[374] = 0;
   out_6450239707838081688[375] = 0;
   out_6450239707838081688[376] = 0;
   out_6450239707838081688[377] = 0;
   out_6450239707838081688[378] = 0;
   out_6450239707838081688[379] = 0;
   out_6450239707838081688[380] = 0;
   out_6450239707838081688[381] = 0;
   out_6450239707838081688[382] = 0;
   out_6450239707838081688[383] = 0;
   out_6450239707838081688[384] = 0;
   out_6450239707838081688[385] = 0;
   out_6450239707838081688[386] = 0;
   out_6450239707838081688[387] = 0;
   out_6450239707838081688[388] = 0;
   out_6450239707838081688[389] = 0;
   out_6450239707838081688[390] = 0;
   out_6450239707838081688[391] = 0;
   out_6450239707838081688[392] = 0;
   out_6450239707838081688[393] = 0;
   out_6450239707838081688[394] = 0;
   out_6450239707838081688[395] = 1.0;
   out_6450239707838081688[396] = 0;
   out_6450239707838081688[397] = 0;
   out_6450239707838081688[398] = 0;
   out_6450239707838081688[399] = 0;
   out_6450239707838081688[400] = 0;
   out_6450239707838081688[401] = 0;
   out_6450239707838081688[402] = 0;
   out_6450239707838081688[403] = 0;
   out_6450239707838081688[404] = 0;
   out_6450239707838081688[405] = 0;
   out_6450239707838081688[406] = 0;
   out_6450239707838081688[407] = 0;
   out_6450239707838081688[408] = 0;
   out_6450239707838081688[409] = 0;
   out_6450239707838081688[410] = 0;
   out_6450239707838081688[411] = 0;
   out_6450239707838081688[412] = 0;
   out_6450239707838081688[413] = 0;
   out_6450239707838081688[414] = 0;
   out_6450239707838081688[415] = 0;
   out_6450239707838081688[416] = 0;
   out_6450239707838081688[417] = 1.0;
   out_6450239707838081688[418] = 0;
   out_6450239707838081688[419] = 0;
   out_6450239707838081688[420] = 0;
   out_6450239707838081688[421] = 0;
   out_6450239707838081688[422] = 0;
   out_6450239707838081688[423] = 0;
   out_6450239707838081688[424] = 0;
   out_6450239707838081688[425] = 0;
   out_6450239707838081688[426] = 0;
   out_6450239707838081688[427] = 0;
   out_6450239707838081688[428] = 0;
   out_6450239707838081688[429] = 0;
   out_6450239707838081688[430] = 0;
   out_6450239707838081688[431] = 0;
   out_6450239707838081688[432] = 0;
   out_6450239707838081688[433] = 0;
   out_6450239707838081688[434] = 0;
   out_6450239707838081688[435] = 0;
   out_6450239707838081688[436] = 0;
   out_6450239707838081688[437] = 0;
   out_6450239707838081688[438] = 0;
   out_6450239707838081688[439] = 1.0;
   out_6450239707838081688[440] = 0;
   out_6450239707838081688[441] = 0;
   out_6450239707838081688[442] = 0;
   out_6450239707838081688[443] = 0;
   out_6450239707838081688[444] = 0;
   out_6450239707838081688[445] = 0;
   out_6450239707838081688[446] = 0;
   out_6450239707838081688[447] = 0;
   out_6450239707838081688[448] = 0;
   out_6450239707838081688[449] = 0;
   out_6450239707838081688[450] = 0;
   out_6450239707838081688[451] = 0;
   out_6450239707838081688[452] = 0;
   out_6450239707838081688[453] = 0;
   out_6450239707838081688[454] = 0;
   out_6450239707838081688[455] = 0;
   out_6450239707838081688[456] = 0;
   out_6450239707838081688[457] = 0;
   out_6450239707838081688[458] = 0;
   out_6450239707838081688[459] = 0;
   out_6450239707838081688[460] = 0;
   out_6450239707838081688[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_7416629977670457027) {
   out_7416629977670457027[0] = dt*state[7] + state[0];
   out_7416629977670457027[1] = dt*state[8] + state[1];
   out_7416629977670457027[2] = dt*state[9] + state[2];
   out_7416629977670457027[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_7416629977670457027[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_7416629977670457027[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_7416629977670457027[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_7416629977670457027[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_7416629977670457027[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_7416629977670457027[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_7416629977670457027[10] = state[10];
   out_7416629977670457027[11] = state[11];
   out_7416629977670457027[12] = state[12];
   out_7416629977670457027[13] = state[13];
   out_7416629977670457027[14] = state[14];
   out_7416629977670457027[15] = state[15];
   out_7416629977670457027[16] = state[16];
   out_7416629977670457027[17] = state[17];
   out_7416629977670457027[18] = state[18];
   out_7416629977670457027[19] = state[19];
   out_7416629977670457027[20] = state[20];
   out_7416629977670457027[21] = state[21];
}
void F_fun(double *state, double dt, double *out_64636203677338758) {
   out_64636203677338758[0] = 1;
   out_64636203677338758[1] = 0;
   out_64636203677338758[2] = 0;
   out_64636203677338758[3] = 0;
   out_64636203677338758[4] = 0;
   out_64636203677338758[5] = 0;
   out_64636203677338758[6] = dt;
   out_64636203677338758[7] = 0;
   out_64636203677338758[8] = 0;
   out_64636203677338758[9] = 0;
   out_64636203677338758[10] = 0;
   out_64636203677338758[11] = 0;
   out_64636203677338758[12] = 0;
   out_64636203677338758[13] = 0;
   out_64636203677338758[14] = 0;
   out_64636203677338758[15] = 0;
   out_64636203677338758[16] = 0;
   out_64636203677338758[17] = 0;
   out_64636203677338758[18] = 0;
   out_64636203677338758[19] = 0;
   out_64636203677338758[20] = 0;
   out_64636203677338758[21] = 0;
   out_64636203677338758[22] = 1;
   out_64636203677338758[23] = 0;
   out_64636203677338758[24] = 0;
   out_64636203677338758[25] = 0;
   out_64636203677338758[26] = 0;
   out_64636203677338758[27] = 0;
   out_64636203677338758[28] = dt;
   out_64636203677338758[29] = 0;
   out_64636203677338758[30] = 0;
   out_64636203677338758[31] = 0;
   out_64636203677338758[32] = 0;
   out_64636203677338758[33] = 0;
   out_64636203677338758[34] = 0;
   out_64636203677338758[35] = 0;
   out_64636203677338758[36] = 0;
   out_64636203677338758[37] = 0;
   out_64636203677338758[38] = 0;
   out_64636203677338758[39] = 0;
   out_64636203677338758[40] = 0;
   out_64636203677338758[41] = 0;
   out_64636203677338758[42] = 0;
   out_64636203677338758[43] = 0;
   out_64636203677338758[44] = 1;
   out_64636203677338758[45] = 0;
   out_64636203677338758[46] = 0;
   out_64636203677338758[47] = 0;
   out_64636203677338758[48] = 0;
   out_64636203677338758[49] = 0;
   out_64636203677338758[50] = dt;
   out_64636203677338758[51] = 0;
   out_64636203677338758[52] = 0;
   out_64636203677338758[53] = 0;
   out_64636203677338758[54] = 0;
   out_64636203677338758[55] = 0;
   out_64636203677338758[56] = 0;
   out_64636203677338758[57] = 0;
   out_64636203677338758[58] = 0;
   out_64636203677338758[59] = 0;
   out_64636203677338758[60] = 0;
   out_64636203677338758[61] = 0;
   out_64636203677338758[62] = 0;
   out_64636203677338758[63] = 0;
   out_64636203677338758[64] = 0;
   out_64636203677338758[65] = 0;
   out_64636203677338758[66] = 1;
   out_64636203677338758[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_64636203677338758[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_64636203677338758[69] = 0;
   out_64636203677338758[70] = 0;
   out_64636203677338758[71] = 0;
   out_64636203677338758[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_64636203677338758[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_64636203677338758[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_64636203677338758[75] = 0;
   out_64636203677338758[76] = 0;
   out_64636203677338758[77] = 0;
   out_64636203677338758[78] = 0;
   out_64636203677338758[79] = 0;
   out_64636203677338758[80] = 0;
   out_64636203677338758[81] = 0;
   out_64636203677338758[82] = 0;
   out_64636203677338758[83] = 0;
   out_64636203677338758[84] = 0;
   out_64636203677338758[85] = 0;
   out_64636203677338758[86] = 0;
   out_64636203677338758[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_64636203677338758[88] = 1;
   out_64636203677338758[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_64636203677338758[90] = 0;
   out_64636203677338758[91] = 0;
   out_64636203677338758[92] = 0;
   out_64636203677338758[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_64636203677338758[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_64636203677338758[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_64636203677338758[96] = 0;
   out_64636203677338758[97] = 0;
   out_64636203677338758[98] = 0;
   out_64636203677338758[99] = 0;
   out_64636203677338758[100] = 0;
   out_64636203677338758[101] = 0;
   out_64636203677338758[102] = 0;
   out_64636203677338758[103] = 0;
   out_64636203677338758[104] = 0;
   out_64636203677338758[105] = 0;
   out_64636203677338758[106] = 0;
   out_64636203677338758[107] = 0;
   out_64636203677338758[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_64636203677338758[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_64636203677338758[110] = 1;
   out_64636203677338758[111] = 0;
   out_64636203677338758[112] = 0;
   out_64636203677338758[113] = 0;
   out_64636203677338758[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_64636203677338758[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_64636203677338758[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_64636203677338758[117] = 0;
   out_64636203677338758[118] = 0;
   out_64636203677338758[119] = 0;
   out_64636203677338758[120] = 0;
   out_64636203677338758[121] = 0;
   out_64636203677338758[122] = 0;
   out_64636203677338758[123] = 0;
   out_64636203677338758[124] = 0;
   out_64636203677338758[125] = 0;
   out_64636203677338758[126] = 0;
   out_64636203677338758[127] = 0;
   out_64636203677338758[128] = 0;
   out_64636203677338758[129] = 0;
   out_64636203677338758[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_64636203677338758[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_64636203677338758[132] = 1;
   out_64636203677338758[133] = 0;
   out_64636203677338758[134] = 0;
   out_64636203677338758[135] = 0;
   out_64636203677338758[136] = 0;
   out_64636203677338758[137] = 0;
   out_64636203677338758[138] = 0;
   out_64636203677338758[139] = 0;
   out_64636203677338758[140] = 0;
   out_64636203677338758[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_64636203677338758[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_64636203677338758[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_64636203677338758[144] = 0;
   out_64636203677338758[145] = 0;
   out_64636203677338758[146] = 0;
   out_64636203677338758[147] = 0;
   out_64636203677338758[148] = 0;
   out_64636203677338758[149] = 0;
   out_64636203677338758[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_64636203677338758[151] = 0;
   out_64636203677338758[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_64636203677338758[153] = 0;
   out_64636203677338758[154] = 1;
   out_64636203677338758[155] = 0;
   out_64636203677338758[156] = 0;
   out_64636203677338758[157] = 0;
   out_64636203677338758[158] = 0;
   out_64636203677338758[159] = 0;
   out_64636203677338758[160] = 0;
   out_64636203677338758[161] = 0;
   out_64636203677338758[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_64636203677338758[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_64636203677338758[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_64636203677338758[165] = 0;
   out_64636203677338758[166] = 0;
   out_64636203677338758[167] = 0;
   out_64636203677338758[168] = 0;
   out_64636203677338758[169] = 0;
   out_64636203677338758[170] = 0;
   out_64636203677338758[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_64636203677338758[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_64636203677338758[173] = 0;
   out_64636203677338758[174] = 0;
   out_64636203677338758[175] = 0;
   out_64636203677338758[176] = 1;
   out_64636203677338758[177] = 0;
   out_64636203677338758[178] = 0;
   out_64636203677338758[179] = 0;
   out_64636203677338758[180] = 0;
   out_64636203677338758[181] = 0;
   out_64636203677338758[182] = 0;
   out_64636203677338758[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_64636203677338758[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_64636203677338758[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_64636203677338758[186] = 0;
   out_64636203677338758[187] = 0;
   out_64636203677338758[188] = 0;
   out_64636203677338758[189] = 0;
   out_64636203677338758[190] = 0;
   out_64636203677338758[191] = 0;
   out_64636203677338758[192] = 0;
   out_64636203677338758[193] = 0;
   out_64636203677338758[194] = 0;
   out_64636203677338758[195] = 0;
   out_64636203677338758[196] = 0;
   out_64636203677338758[197] = 0;
   out_64636203677338758[198] = 1;
   out_64636203677338758[199] = 0;
   out_64636203677338758[200] = 0;
   out_64636203677338758[201] = 0;
   out_64636203677338758[202] = 0;
   out_64636203677338758[203] = 0;
   out_64636203677338758[204] = 0;
   out_64636203677338758[205] = 0;
   out_64636203677338758[206] = 0;
   out_64636203677338758[207] = 0;
   out_64636203677338758[208] = 0;
   out_64636203677338758[209] = 0;
   out_64636203677338758[210] = 0;
   out_64636203677338758[211] = 0;
   out_64636203677338758[212] = 0;
   out_64636203677338758[213] = 0;
   out_64636203677338758[214] = 0;
   out_64636203677338758[215] = 0;
   out_64636203677338758[216] = 0;
   out_64636203677338758[217] = 0;
   out_64636203677338758[218] = 0;
   out_64636203677338758[219] = 0;
   out_64636203677338758[220] = 1;
   out_64636203677338758[221] = 0;
   out_64636203677338758[222] = 0;
   out_64636203677338758[223] = 0;
   out_64636203677338758[224] = 0;
   out_64636203677338758[225] = 0;
   out_64636203677338758[226] = 0;
   out_64636203677338758[227] = 0;
   out_64636203677338758[228] = 0;
   out_64636203677338758[229] = 0;
   out_64636203677338758[230] = 0;
   out_64636203677338758[231] = 0;
   out_64636203677338758[232] = 0;
   out_64636203677338758[233] = 0;
   out_64636203677338758[234] = 0;
   out_64636203677338758[235] = 0;
   out_64636203677338758[236] = 0;
   out_64636203677338758[237] = 0;
   out_64636203677338758[238] = 0;
   out_64636203677338758[239] = 0;
   out_64636203677338758[240] = 0;
   out_64636203677338758[241] = 0;
   out_64636203677338758[242] = 1;
   out_64636203677338758[243] = 0;
   out_64636203677338758[244] = 0;
   out_64636203677338758[245] = 0;
   out_64636203677338758[246] = 0;
   out_64636203677338758[247] = 0;
   out_64636203677338758[248] = 0;
   out_64636203677338758[249] = 0;
   out_64636203677338758[250] = 0;
   out_64636203677338758[251] = 0;
   out_64636203677338758[252] = 0;
   out_64636203677338758[253] = 0;
   out_64636203677338758[254] = 0;
   out_64636203677338758[255] = 0;
   out_64636203677338758[256] = 0;
   out_64636203677338758[257] = 0;
   out_64636203677338758[258] = 0;
   out_64636203677338758[259] = 0;
   out_64636203677338758[260] = 0;
   out_64636203677338758[261] = 0;
   out_64636203677338758[262] = 0;
   out_64636203677338758[263] = 0;
   out_64636203677338758[264] = 1;
   out_64636203677338758[265] = 0;
   out_64636203677338758[266] = 0;
   out_64636203677338758[267] = 0;
   out_64636203677338758[268] = 0;
   out_64636203677338758[269] = 0;
   out_64636203677338758[270] = 0;
   out_64636203677338758[271] = 0;
   out_64636203677338758[272] = 0;
   out_64636203677338758[273] = 0;
   out_64636203677338758[274] = 0;
   out_64636203677338758[275] = 0;
   out_64636203677338758[276] = 0;
   out_64636203677338758[277] = 0;
   out_64636203677338758[278] = 0;
   out_64636203677338758[279] = 0;
   out_64636203677338758[280] = 0;
   out_64636203677338758[281] = 0;
   out_64636203677338758[282] = 0;
   out_64636203677338758[283] = 0;
   out_64636203677338758[284] = 0;
   out_64636203677338758[285] = 0;
   out_64636203677338758[286] = 1;
   out_64636203677338758[287] = 0;
   out_64636203677338758[288] = 0;
   out_64636203677338758[289] = 0;
   out_64636203677338758[290] = 0;
   out_64636203677338758[291] = 0;
   out_64636203677338758[292] = 0;
   out_64636203677338758[293] = 0;
   out_64636203677338758[294] = 0;
   out_64636203677338758[295] = 0;
   out_64636203677338758[296] = 0;
   out_64636203677338758[297] = 0;
   out_64636203677338758[298] = 0;
   out_64636203677338758[299] = 0;
   out_64636203677338758[300] = 0;
   out_64636203677338758[301] = 0;
   out_64636203677338758[302] = 0;
   out_64636203677338758[303] = 0;
   out_64636203677338758[304] = 0;
   out_64636203677338758[305] = 0;
   out_64636203677338758[306] = 0;
   out_64636203677338758[307] = 0;
   out_64636203677338758[308] = 1;
   out_64636203677338758[309] = 0;
   out_64636203677338758[310] = 0;
   out_64636203677338758[311] = 0;
   out_64636203677338758[312] = 0;
   out_64636203677338758[313] = 0;
   out_64636203677338758[314] = 0;
   out_64636203677338758[315] = 0;
   out_64636203677338758[316] = 0;
   out_64636203677338758[317] = 0;
   out_64636203677338758[318] = 0;
   out_64636203677338758[319] = 0;
   out_64636203677338758[320] = 0;
   out_64636203677338758[321] = 0;
   out_64636203677338758[322] = 0;
   out_64636203677338758[323] = 0;
   out_64636203677338758[324] = 0;
   out_64636203677338758[325] = 0;
   out_64636203677338758[326] = 0;
   out_64636203677338758[327] = 0;
   out_64636203677338758[328] = 0;
   out_64636203677338758[329] = 0;
   out_64636203677338758[330] = 1;
   out_64636203677338758[331] = 0;
   out_64636203677338758[332] = 0;
   out_64636203677338758[333] = 0;
   out_64636203677338758[334] = 0;
   out_64636203677338758[335] = 0;
   out_64636203677338758[336] = 0;
   out_64636203677338758[337] = 0;
   out_64636203677338758[338] = 0;
   out_64636203677338758[339] = 0;
   out_64636203677338758[340] = 0;
   out_64636203677338758[341] = 0;
   out_64636203677338758[342] = 0;
   out_64636203677338758[343] = 0;
   out_64636203677338758[344] = 0;
   out_64636203677338758[345] = 0;
   out_64636203677338758[346] = 0;
   out_64636203677338758[347] = 0;
   out_64636203677338758[348] = 0;
   out_64636203677338758[349] = 0;
   out_64636203677338758[350] = 0;
   out_64636203677338758[351] = 0;
   out_64636203677338758[352] = 1;
   out_64636203677338758[353] = 0;
   out_64636203677338758[354] = 0;
   out_64636203677338758[355] = 0;
   out_64636203677338758[356] = 0;
   out_64636203677338758[357] = 0;
   out_64636203677338758[358] = 0;
   out_64636203677338758[359] = 0;
   out_64636203677338758[360] = 0;
   out_64636203677338758[361] = 0;
   out_64636203677338758[362] = 0;
   out_64636203677338758[363] = 0;
   out_64636203677338758[364] = 0;
   out_64636203677338758[365] = 0;
   out_64636203677338758[366] = 0;
   out_64636203677338758[367] = 0;
   out_64636203677338758[368] = 0;
   out_64636203677338758[369] = 0;
   out_64636203677338758[370] = 0;
   out_64636203677338758[371] = 0;
   out_64636203677338758[372] = 0;
   out_64636203677338758[373] = 0;
   out_64636203677338758[374] = 1;
   out_64636203677338758[375] = 0;
   out_64636203677338758[376] = 0;
   out_64636203677338758[377] = 0;
   out_64636203677338758[378] = 0;
   out_64636203677338758[379] = 0;
   out_64636203677338758[380] = 0;
   out_64636203677338758[381] = 0;
   out_64636203677338758[382] = 0;
   out_64636203677338758[383] = 0;
   out_64636203677338758[384] = 0;
   out_64636203677338758[385] = 0;
   out_64636203677338758[386] = 0;
   out_64636203677338758[387] = 0;
   out_64636203677338758[388] = 0;
   out_64636203677338758[389] = 0;
   out_64636203677338758[390] = 0;
   out_64636203677338758[391] = 0;
   out_64636203677338758[392] = 0;
   out_64636203677338758[393] = 0;
   out_64636203677338758[394] = 0;
   out_64636203677338758[395] = 0;
   out_64636203677338758[396] = 1;
   out_64636203677338758[397] = 0;
   out_64636203677338758[398] = 0;
   out_64636203677338758[399] = 0;
   out_64636203677338758[400] = 0;
   out_64636203677338758[401] = 0;
   out_64636203677338758[402] = 0;
   out_64636203677338758[403] = 0;
   out_64636203677338758[404] = 0;
   out_64636203677338758[405] = 0;
   out_64636203677338758[406] = 0;
   out_64636203677338758[407] = 0;
   out_64636203677338758[408] = 0;
   out_64636203677338758[409] = 0;
   out_64636203677338758[410] = 0;
   out_64636203677338758[411] = 0;
   out_64636203677338758[412] = 0;
   out_64636203677338758[413] = 0;
   out_64636203677338758[414] = 0;
   out_64636203677338758[415] = 0;
   out_64636203677338758[416] = 0;
   out_64636203677338758[417] = 0;
   out_64636203677338758[418] = 1;
   out_64636203677338758[419] = 0;
   out_64636203677338758[420] = 0;
   out_64636203677338758[421] = 0;
   out_64636203677338758[422] = 0;
   out_64636203677338758[423] = 0;
   out_64636203677338758[424] = 0;
   out_64636203677338758[425] = 0;
   out_64636203677338758[426] = 0;
   out_64636203677338758[427] = 0;
   out_64636203677338758[428] = 0;
   out_64636203677338758[429] = 0;
   out_64636203677338758[430] = 0;
   out_64636203677338758[431] = 0;
   out_64636203677338758[432] = 0;
   out_64636203677338758[433] = 0;
   out_64636203677338758[434] = 0;
   out_64636203677338758[435] = 0;
   out_64636203677338758[436] = 0;
   out_64636203677338758[437] = 0;
   out_64636203677338758[438] = 0;
   out_64636203677338758[439] = 0;
   out_64636203677338758[440] = 1;
}
void h_4(double *state, double *unused, double *out_4229943665795564963) {
   out_4229943665795564963[0] = state[10] + state[13];
   out_4229943665795564963[1] = state[11] + state[14];
   out_4229943665795564963[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_6822771310761048891) {
   out_6822771310761048891[0] = 0;
   out_6822771310761048891[1] = 0;
   out_6822771310761048891[2] = 0;
   out_6822771310761048891[3] = 0;
   out_6822771310761048891[4] = 0;
   out_6822771310761048891[5] = 0;
   out_6822771310761048891[6] = 0;
   out_6822771310761048891[7] = 0;
   out_6822771310761048891[8] = 0;
   out_6822771310761048891[9] = 0;
   out_6822771310761048891[10] = 1;
   out_6822771310761048891[11] = 0;
   out_6822771310761048891[12] = 0;
   out_6822771310761048891[13] = 1;
   out_6822771310761048891[14] = 0;
   out_6822771310761048891[15] = 0;
   out_6822771310761048891[16] = 0;
   out_6822771310761048891[17] = 0;
   out_6822771310761048891[18] = 0;
   out_6822771310761048891[19] = 0;
   out_6822771310761048891[20] = 0;
   out_6822771310761048891[21] = 0;
   out_6822771310761048891[22] = 0;
   out_6822771310761048891[23] = 0;
   out_6822771310761048891[24] = 0;
   out_6822771310761048891[25] = 0;
   out_6822771310761048891[26] = 0;
   out_6822771310761048891[27] = 0;
   out_6822771310761048891[28] = 0;
   out_6822771310761048891[29] = 0;
   out_6822771310761048891[30] = 0;
   out_6822771310761048891[31] = 0;
   out_6822771310761048891[32] = 0;
   out_6822771310761048891[33] = 1;
   out_6822771310761048891[34] = 0;
   out_6822771310761048891[35] = 0;
   out_6822771310761048891[36] = 1;
   out_6822771310761048891[37] = 0;
   out_6822771310761048891[38] = 0;
   out_6822771310761048891[39] = 0;
   out_6822771310761048891[40] = 0;
   out_6822771310761048891[41] = 0;
   out_6822771310761048891[42] = 0;
   out_6822771310761048891[43] = 0;
   out_6822771310761048891[44] = 0;
   out_6822771310761048891[45] = 0;
   out_6822771310761048891[46] = 0;
   out_6822771310761048891[47] = 0;
   out_6822771310761048891[48] = 0;
   out_6822771310761048891[49] = 0;
   out_6822771310761048891[50] = 0;
   out_6822771310761048891[51] = 0;
   out_6822771310761048891[52] = 0;
   out_6822771310761048891[53] = 0;
   out_6822771310761048891[54] = 0;
   out_6822771310761048891[55] = 0;
   out_6822771310761048891[56] = 1;
   out_6822771310761048891[57] = 0;
   out_6822771310761048891[58] = 0;
   out_6822771310761048891[59] = 1;
   out_6822771310761048891[60] = 0;
   out_6822771310761048891[61] = 0;
   out_6822771310761048891[62] = 0;
   out_6822771310761048891[63] = 0;
   out_6822771310761048891[64] = 0;
   out_6822771310761048891[65] = 0;
}
void h_9(double *state, double *unused, double *out_2084672950082204567) {
   out_2084672950082204567[0] = state[10];
   out_2084672950082204567[1] = state[11];
   out_2084672950082204567[2] = state[12];
}
void H_9(double *state, double *unused, double *out_7063960957390639536) {
   out_7063960957390639536[0] = 0;
   out_7063960957390639536[1] = 0;
   out_7063960957390639536[2] = 0;
   out_7063960957390639536[3] = 0;
   out_7063960957390639536[4] = 0;
   out_7063960957390639536[5] = 0;
   out_7063960957390639536[6] = 0;
   out_7063960957390639536[7] = 0;
   out_7063960957390639536[8] = 0;
   out_7063960957390639536[9] = 0;
   out_7063960957390639536[10] = 1;
   out_7063960957390639536[11] = 0;
   out_7063960957390639536[12] = 0;
   out_7063960957390639536[13] = 0;
   out_7063960957390639536[14] = 0;
   out_7063960957390639536[15] = 0;
   out_7063960957390639536[16] = 0;
   out_7063960957390639536[17] = 0;
   out_7063960957390639536[18] = 0;
   out_7063960957390639536[19] = 0;
   out_7063960957390639536[20] = 0;
   out_7063960957390639536[21] = 0;
   out_7063960957390639536[22] = 0;
   out_7063960957390639536[23] = 0;
   out_7063960957390639536[24] = 0;
   out_7063960957390639536[25] = 0;
   out_7063960957390639536[26] = 0;
   out_7063960957390639536[27] = 0;
   out_7063960957390639536[28] = 0;
   out_7063960957390639536[29] = 0;
   out_7063960957390639536[30] = 0;
   out_7063960957390639536[31] = 0;
   out_7063960957390639536[32] = 0;
   out_7063960957390639536[33] = 1;
   out_7063960957390639536[34] = 0;
   out_7063960957390639536[35] = 0;
   out_7063960957390639536[36] = 0;
   out_7063960957390639536[37] = 0;
   out_7063960957390639536[38] = 0;
   out_7063960957390639536[39] = 0;
   out_7063960957390639536[40] = 0;
   out_7063960957390639536[41] = 0;
   out_7063960957390639536[42] = 0;
   out_7063960957390639536[43] = 0;
   out_7063960957390639536[44] = 0;
   out_7063960957390639536[45] = 0;
   out_7063960957390639536[46] = 0;
   out_7063960957390639536[47] = 0;
   out_7063960957390639536[48] = 0;
   out_7063960957390639536[49] = 0;
   out_7063960957390639536[50] = 0;
   out_7063960957390639536[51] = 0;
   out_7063960957390639536[52] = 0;
   out_7063960957390639536[53] = 0;
   out_7063960957390639536[54] = 0;
   out_7063960957390639536[55] = 0;
   out_7063960957390639536[56] = 1;
   out_7063960957390639536[57] = 0;
   out_7063960957390639536[58] = 0;
   out_7063960957390639536[59] = 0;
   out_7063960957390639536[60] = 0;
   out_7063960957390639536[61] = 0;
   out_7063960957390639536[62] = 0;
   out_7063960957390639536[63] = 0;
   out_7063960957390639536[64] = 0;
   out_7063960957390639536[65] = 0;
}
void h_10(double *state, double *unused, double *out_5476039309526243161) {
   out_5476039309526243161[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_5476039309526243161[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_5476039309526243161[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_4889185259062790022) {
   out_4889185259062790022[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4889185259062790022[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_4889185259062790022[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_4889185259062790022[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4889185259062790022[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4889185259062790022[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4889185259062790022[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4889185259062790022[7] = 0;
   out_4889185259062790022[8] = 0;
   out_4889185259062790022[9] = 0;
   out_4889185259062790022[10] = 0;
   out_4889185259062790022[11] = 0;
   out_4889185259062790022[12] = 0;
   out_4889185259062790022[13] = 0;
   out_4889185259062790022[14] = 0;
   out_4889185259062790022[15] = 0;
   out_4889185259062790022[16] = 1;
   out_4889185259062790022[17] = 0;
   out_4889185259062790022[18] = 0;
   out_4889185259062790022[19] = 1;
   out_4889185259062790022[20] = 0;
   out_4889185259062790022[21] = 0;
   out_4889185259062790022[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_4889185259062790022[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4889185259062790022[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_4889185259062790022[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4889185259062790022[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4889185259062790022[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4889185259062790022[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4889185259062790022[29] = 0;
   out_4889185259062790022[30] = 0;
   out_4889185259062790022[31] = 0;
   out_4889185259062790022[32] = 0;
   out_4889185259062790022[33] = 0;
   out_4889185259062790022[34] = 0;
   out_4889185259062790022[35] = 0;
   out_4889185259062790022[36] = 0;
   out_4889185259062790022[37] = 0;
   out_4889185259062790022[38] = 0;
   out_4889185259062790022[39] = 1;
   out_4889185259062790022[40] = 0;
   out_4889185259062790022[41] = 0;
   out_4889185259062790022[42] = 1;
   out_4889185259062790022[43] = 0;
   out_4889185259062790022[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_4889185259062790022[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_4889185259062790022[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4889185259062790022[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4889185259062790022[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4889185259062790022[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4889185259062790022[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4889185259062790022[51] = 0;
   out_4889185259062790022[52] = 0;
   out_4889185259062790022[53] = 0;
   out_4889185259062790022[54] = 0;
   out_4889185259062790022[55] = 0;
   out_4889185259062790022[56] = 0;
   out_4889185259062790022[57] = 0;
   out_4889185259062790022[58] = 0;
   out_4889185259062790022[59] = 0;
   out_4889185259062790022[60] = 0;
   out_4889185259062790022[61] = 0;
   out_4889185259062790022[62] = 1;
   out_4889185259062790022[63] = 0;
   out_4889185259062790022[64] = 0;
   out_4889185259062790022[65] = 1;
}
void h_12(double *state, double *unused, double *out_3198692804067788211) {
   out_3198692804067788211[0] = state[0];
   out_3198692804067788211[1] = state[1];
   out_3198692804067788211[2] = state[2];
}
void H_12(double *state, double *unused, double *out_7443870335808642558) {
   out_7443870335808642558[0] = 1;
   out_7443870335808642558[1] = 0;
   out_7443870335808642558[2] = 0;
   out_7443870335808642558[3] = 0;
   out_7443870335808642558[4] = 0;
   out_7443870335808642558[5] = 0;
   out_7443870335808642558[6] = 0;
   out_7443870335808642558[7] = 0;
   out_7443870335808642558[8] = 0;
   out_7443870335808642558[9] = 0;
   out_7443870335808642558[10] = 0;
   out_7443870335808642558[11] = 0;
   out_7443870335808642558[12] = 0;
   out_7443870335808642558[13] = 0;
   out_7443870335808642558[14] = 0;
   out_7443870335808642558[15] = 0;
   out_7443870335808642558[16] = 0;
   out_7443870335808642558[17] = 0;
   out_7443870335808642558[18] = 0;
   out_7443870335808642558[19] = 0;
   out_7443870335808642558[20] = 0;
   out_7443870335808642558[21] = 0;
   out_7443870335808642558[22] = 0;
   out_7443870335808642558[23] = 1;
   out_7443870335808642558[24] = 0;
   out_7443870335808642558[25] = 0;
   out_7443870335808642558[26] = 0;
   out_7443870335808642558[27] = 0;
   out_7443870335808642558[28] = 0;
   out_7443870335808642558[29] = 0;
   out_7443870335808642558[30] = 0;
   out_7443870335808642558[31] = 0;
   out_7443870335808642558[32] = 0;
   out_7443870335808642558[33] = 0;
   out_7443870335808642558[34] = 0;
   out_7443870335808642558[35] = 0;
   out_7443870335808642558[36] = 0;
   out_7443870335808642558[37] = 0;
   out_7443870335808642558[38] = 0;
   out_7443870335808642558[39] = 0;
   out_7443870335808642558[40] = 0;
   out_7443870335808642558[41] = 0;
   out_7443870335808642558[42] = 0;
   out_7443870335808642558[43] = 0;
   out_7443870335808642558[44] = 0;
   out_7443870335808642558[45] = 0;
   out_7443870335808642558[46] = 1;
   out_7443870335808642558[47] = 0;
   out_7443870335808642558[48] = 0;
   out_7443870335808642558[49] = 0;
   out_7443870335808642558[50] = 0;
   out_7443870335808642558[51] = 0;
   out_7443870335808642558[52] = 0;
   out_7443870335808642558[53] = 0;
   out_7443870335808642558[54] = 0;
   out_7443870335808642558[55] = 0;
   out_7443870335808642558[56] = 0;
   out_7443870335808642558[57] = 0;
   out_7443870335808642558[58] = 0;
   out_7443870335808642558[59] = 0;
   out_7443870335808642558[60] = 0;
   out_7443870335808642558[61] = 0;
   out_7443870335808642558[62] = 0;
   out_7443870335808642558[63] = 0;
   out_7443870335808642558[64] = 0;
   out_7443870335808642558[65] = 0;
}
void h_35(double *state, double *unused, double *out_1218819416543384806) {
   out_1218819416543384806[0] = state[7];
   out_1218819416543384806[1] = state[8];
   out_1218819416543384806[2] = state[9];
}
void H_35(double *state, double *unused, double *out_8257310705575895349) {
   out_8257310705575895349[0] = 0;
   out_8257310705575895349[1] = 0;
   out_8257310705575895349[2] = 0;
   out_8257310705575895349[3] = 0;
   out_8257310705575895349[4] = 0;
   out_8257310705575895349[5] = 0;
   out_8257310705575895349[6] = 0;
   out_8257310705575895349[7] = 1;
   out_8257310705575895349[8] = 0;
   out_8257310705575895349[9] = 0;
   out_8257310705575895349[10] = 0;
   out_8257310705575895349[11] = 0;
   out_8257310705575895349[12] = 0;
   out_8257310705575895349[13] = 0;
   out_8257310705575895349[14] = 0;
   out_8257310705575895349[15] = 0;
   out_8257310705575895349[16] = 0;
   out_8257310705575895349[17] = 0;
   out_8257310705575895349[18] = 0;
   out_8257310705575895349[19] = 0;
   out_8257310705575895349[20] = 0;
   out_8257310705575895349[21] = 0;
   out_8257310705575895349[22] = 0;
   out_8257310705575895349[23] = 0;
   out_8257310705575895349[24] = 0;
   out_8257310705575895349[25] = 0;
   out_8257310705575895349[26] = 0;
   out_8257310705575895349[27] = 0;
   out_8257310705575895349[28] = 0;
   out_8257310705575895349[29] = 0;
   out_8257310705575895349[30] = 1;
   out_8257310705575895349[31] = 0;
   out_8257310705575895349[32] = 0;
   out_8257310705575895349[33] = 0;
   out_8257310705575895349[34] = 0;
   out_8257310705575895349[35] = 0;
   out_8257310705575895349[36] = 0;
   out_8257310705575895349[37] = 0;
   out_8257310705575895349[38] = 0;
   out_8257310705575895349[39] = 0;
   out_8257310705575895349[40] = 0;
   out_8257310705575895349[41] = 0;
   out_8257310705575895349[42] = 0;
   out_8257310705575895349[43] = 0;
   out_8257310705575895349[44] = 0;
   out_8257310705575895349[45] = 0;
   out_8257310705575895349[46] = 0;
   out_8257310705575895349[47] = 0;
   out_8257310705575895349[48] = 0;
   out_8257310705575895349[49] = 0;
   out_8257310705575895349[50] = 0;
   out_8257310705575895349[51] = 0;
   out_8257310705575895349[52] = 0;
   out_8257310705575895349[53] = 1;
   out_8257310705575895349[54] = 0;
   out_8257310705575895349[55] = 0;
   out_8257310705575895349[56] = 0;
   out_8257310705575895349[57] = 0;
   out_8257310705575895349[58] = 0;
   out_8257310705575895349[59] = 0;
   out_8257310705575895349[60] = 0;
   out_8257310705575895349[61] = 0;
   out_8257310705575895349[62] = 0;
   out_8257310705575895349[63] = 0;
   out_8257310705575895349[64] = 0;
   out_8257310705575895349[65] = 0;
}
void h_32(double *state, double *unused, double *out_1140620113963710055) {
   out_1140620113963710055[0] = state[3];
   out_1140620113963710055[1] = state[4];
   out_1140620113963710055[2] = state[5];
   out_1140620113963710055[3] = state[6];
}
void H_32(double *state, double *unused, double *out_3274568864439539911) {
   out_3274568864439539911[0] = 0;
   out_3274568864439539911[1] = 0;
   out_3274568864439539911[2] = 0;
   out_3274568864439539911[3] = 1;
   out_3274568864439539911[4] = 0;
   out_3274568864439539911[5] = 0;
   out_3274568864439539911[6] = 0;
   out_3274568864439539911[7] = 0;
   out_3274568864439539911[8] = 0;
   out_3274568864439539911[9] = 0;
   out_3274568864439539911[10] = 0;
   out_3274568864439539911[11] = 0;
   out_3274568864439539911[12] = 0;
   out_3274568864439539911[13] = 0;
   out_3274568864439539911[14] = 0;
   out_3274568864439539911[15] = 0;
   out_3274568864439539911[16] = 0;
   out_3274568864439539911[17] = 0;
   out_3274568864439539911[18] = 0;
   out_3274568864439539911[19] = 0;
   out_3274568864439539911[20] = 0;
   out_3274568864439539911[21] = 0;
   out_3274568864439539911[22] = 0;
   out_3274568864439539911[23] = 0;
   out_3274568864439539911[24] = 0;
   out_3274568864439539911[25] = 0;
   out_3274568864439539911[26] = 1;
   out_3274568864439539911[27] = 0;
   out_3274568864439539911[28] = 0;
   out_3274568864439539911[29] = 0;
   out_3274568864439539911[30] = 0;
   out_3274568864439539911[31] = 0;
   out_3274568864439539911[32] = 0;
   out_3274568864439539911[33] = 0;
   out_3274568864439539911[34] = 0;
   out_3274568864439539911[35] = 0;
   out_3274568864439539911[36] = 0;
   out_3274568864439539911[37] = 0;
   out_3274568864439539911[38] = 0;
   out_3274568864439539911[39] = 0;
   out_3274568864439539911[40] = 0;
   out_3274568864439539911[41] = 0;
   out_3274568864439539911[42] = 0;
   out_3274568864439539911[43] = 0;
   out_3274568864439539911[44] = 0;
   out_3274568864439539911[45] = 0;
   out_3274568864439539911[46] = 0;
   out_3274568864439539911[47] = 0;
   out_3274568864439539911[48] = 0;
   out_3274568864439539911[49] = 1;
   out_3274568864439539911[50] = 0;
   out_3274568864439539911[51] = 0;
   out_3274568864439539911[52] = 0;
   out_3274568864439539911[53] = 0;
   out_3274568864439539911[54] = 0;
   out_3274568864439539911[55] = 0;
   out_3274568864439539911[56] = 0;
   out_3274568864439539911[57] = 0;
   out_3274568864439539911[58] = 0;
   out_3274568864439539911[59] = 0;
   out_3274568864439539911[60] = 0;
   out_3274568864439539911[61] = 0;
   out_3274568864439539911[62] = 0;
   out_3274568864439539911[63] = 0;
   out_3274568864439539911[64] = 0;
   out_3274568864439539911[65] = 0;
   out_3274568864439539911[66] = 0;
   out_3274568864439539911[67] = 0;
   out_3274568864439539911[68] = 0;
   out_3274568864439539911[69] = 0;
   out_3274568864439539911[70] = 0;
   out_3274568864439539911[71] = 0;
   out_3274568864439539911[72] = 1;
   out_3274568864439539911[73] = 0;
   out_3274568864439539911[74] = 0;
   out_3274568864439539911[75] = 0;
   out_3274568864439539911[76] = 0;
   out_3274568864439539911[77] = 0;
   out_3274568864439539911[78] = 0;
   out_3274568864439539911[79] = 0;
   out_3274568864439539911[80] = 0;
   out_3274568864439539911[81] = 0;
   out_3274568864439539911[82] = 0;
   out_3274568864439539911[83] = 0;
   out_3274568864439539911[84] = 0;
   out_3274568864439539911[85] = 0;
   out_3274568864439539911[86] = 0;
   out_3274568864439539911[87] = 0;
}
void h_13(double *state, double *unused, double *out_6838285208320409473) {
   out_6838285208320409473[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_6838285208320409473[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_6838285208320409473[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_765406635205951091) {
   out_765406635205951091[0] = 0;
   out_765406635205951091[1] = 0;
   out_765406635205951091[2] = 0;
   out_765406635205951091[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_765406635205951091[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_765406635205951091[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_765406635205951091[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_765406635205951091[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_765406635205951091[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_765406635205951091[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_765406635205951091[10] = 0;
   out_765406635205951091[11] = 0;
   out_765406635205951091[12] = 0;
   out_765406635205951091[13] = 0;
   out_765406635205951091[14] = 0;
   out_765406635205951091[15] = 0;
   out_765406635205951091[16] = 0;
   out_765406635205951091[17] = 0;
   out_765406635205951091[18] = 0;
   out_765406635205951091[19] = 0;
   out_765406635205951091[20] = 0;
   out_765406635205951091[21] = 0;
   out_765406635205951091[22] = 0;
   out_765406635205951091[23] = 0;
   out_765406635205951091[24] = 0;
   out_765406635205951091[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_765406635205951091[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_765406635205951091[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_765406635205951091[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_765406635205951091[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_765406635205951091[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_765406635205951091[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_765406635205951091[32] = 0;
   out_765406635205951091[33] = 0;
   out_765406635205951091[34] = 0;
   out_765406635205951091[35] = 0;
   out_765406635205951091[36] = 0;
   out_765406635205951091[37] = 0;
   out_765406635205951091[38] = 0;
   out_765406635205951091[39] = 0;
   out_765406635205951091[40] = 0;
   out_765406635205951091[41] = 0;
   out_765406635205951091[42] = 0;
   out_765406635205951091[43] = 0;
   out_765406635205951091[44] = 0;
   out_765406635205951091[45] = 0;
   out_765406635205951091[46] = 0;
   out_765406635205951091[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_765406635205951091[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_765406635205951091[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_765406635205951091[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_765406635205951091[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_765406635205951091[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_765406635205951091[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_765406635205951091[54] = 0;
   out_765406635205951091[55] = 0;
   out_765406635205951091[56] = 0;
   out_765406635205951091[57] = 0;
   out_765406635205951091[58] = 0;
   out_765406635205951091[59] = 0;
   out_765406635205951091[60] = 0;
   out_765406635205951091[61] = 0;
   out_765406635205951091[62] = 0;
   out_765406635205951091[63] = 0;
   out_765406635205951091[64] = 0;
   out_765406635205951091[65] = 0;
}
void h_14(double *state, double *unused, double *out_2084672950082204567) {
   out_2084672950082204567[0] = state[10];
   out_2084672950082204567[1] = state[11];
   out_2084672950082204567[2] = state[12];
}
void H_14(double *state, double *unused, double *out_7063960957390639536) {
   out_7063960957390639536[0] = 0;
   out_7063960957390639536[1] = 0;
   out_7063960957390639536[2] = 0;
   out_7063960957390639536[3] = 0;
   out_7063960957390639536[4] = 0;
   out_7063960957390639536[5] = 0;
   out_7063960957390639536[6] = 0;
   out_7063960957390639536[7] = 0;
   out_7063960957390639536[8] = 0;
   out_7063960957390639536[9] = 0;
   out_7063960957390639536[10] = 1;
   out_7063960957390639536[11] = 0;
   out_7063960957390639536[12] = 0;
   out_7063960957390639536[13] = 0;
   out_7063960957390639536[14] = 0;
   out_7063960957390639536[15] = 0;
   out_7063960957390639536[16] = 0;
   out_7063960957390639536[17] = 0;
   out_7063960957390639536[18] = 0;
   out_7063960957390639536[19] = 0;
   out_7063960957390639536[20] = 0;
   out_7063960957390639536[21] = 0;
   out_7063960957390639536[22] = 0;
   out_7063960957390639536[23] = 0;
   out_7063960957390639536[24] = 0;
   out_7063960957390639536[25] = 0;
   out_7063960957390639536[26] = 0;
   out_7063960957390639536[27] = 0;
   out_7063960957390639536[28] = 0;
   out_7063960957390639536[29] = 0;
   out_7063960957390639536[30] = 0;
   out_7063960957390639536[31] = 0;
   out_7063960957390639536[32] = 0;
   out_7063960957390639536[33] = 1;
   out_7063960957390639536[34] = 0;
   out_7063960957390639536[35] = 0;
   out_7063960957390639536[36] = 0;
   out_7063960957390639536[37] = 0;
   out_7063960957390639536[38] = 0;
   out_7063960957390639536[39] = 0;
   out_7063960957390639536[40] = 0;
   out_7063960957390639536[41] = 0;
   out_7063960957390639536[42] = 0;
   out_7063960957390639536[43] = 0;
   out_7063960957390639536[44] = 0;
   out_7063960957390639536[45] = 0;
   out_7063960957390639536[46] = 0;
   out_7063960957390639536[47] = 0;
   out_7063960957390639536[48] = 0;
   out_7063960957390639536[49] = 0;
   out_7063960957390639536[50] = 0;
   out_7063960957390639536[51] = 0;
   out_7063960957390639536[52] = 0;
   out_7063960957390639536[53] = 0;
   out_7063960957390639536[54] = 0;
   out_7063960957390639536[55] = 0;
   out_7063960957390639536[56] = 1;
   out_7063960957390639536[57] = 0;
   out_7063960957390639536[58] = 0;
   out_7063960957390639536[59] = 0;
   out_7063960957390639536[60] = 0;
   out_7063960957390639536[61] = 0;
   out_7063960957390639536[62] = 0;
   out_7063960957390639536[63] = 0;
   out_7063960957390639536[64] = 0;
   out_7063960957390639536[65] = 0;
}
void h_33(double *state, double *unused, double *out_1760391852948304019) {
   out_1760391852948304019[0] = state[16];
   out_1760391852948304019[1] = state[17];
   out_1760391852948304019[2] = state[18];
}
void H_33(double *state, double *unused, double *out_5106753700937037745) {
   out_5106753700937037745[0] = 0;
   out_5106753700937037745[1] = 0;
   out_5106753700937037745[2] = 0;
   out_5106753700937037745[3] = 0;
   out_5106753700937037745[4] = 0;
   out_5106753700937037745[5] = 0;
   out_5106753700937037745[6] = 0;
   out_5106753700937037745[7] = 0;
   out_5106753700937037745[8] = 0;
   out_5106753700937037745[9] = 0;
   out_5106753700937037745[10] = 0;
   out_5106753700937037745[11] = 0;
   out_5106753700937037745[12] = 0;
   out_5106753700937037745[13] = 0;
   out_5106753700937037745[14] = 0;
   out_5106753700937037745[15] = 0;
   out_5106753700937037745[16] = 1;
   out_5106753700937037745[17] = 0;
   out_5106753700937037745[18] = 0;
   out_5106753700937037745[19] = 0;
   out_5106753700937037745[20] = 0;
   out_5106753700937037745[21] = 0;
   out_5106753700937037745[22] = 0;
   out_5106753700937037745[23] = 0;
   out_5106753700937037745[24] = 0;
   out_5106753700937037745[25] = 0;
   out_5106753700937037745[26] = 0;
   out_5106753700937037745[27] = 0;
   out_5106753700937037745[28] = 0;
   out_5106753700937037745[29] = 0;
   out_5106753700937037745[30] = 0;
   out_5106753700937037745[31] = 0;
   out_5106753700937037745[32] = 0;
   out_5106753700937037745[33] = 0;
   out_5106753700937037745[34] = 0;
   out_5106753700937037745[35] = 0;
   out_5106753700937037745[36] = 0;
   out_5106753700937037745[37] = 0;
   out_5106753700937037745[38] = 0;
   out_5106753700937037745[39] = 1;
   out_5106753700937037745[40] = 0;
   out_5106753700937037745[41] = 0;
   out_5106753700937037745[42] = 0;
   out_5106753700937037745[43] = 0;
   out_5106753700937037745[44] = 0;
   out_5106753700937037745[45] = 0;
   out_5106753700937037745[46] = 0;
   out_5106753700937037745[47] = 0;
   out_5106753700937037745[48] = 0;
   out_5106753700937037745[49] = 0;
   out_5106753700937037745[50] = 0;
   out_5106753700937037745[51] = 0;
   out_5106753700937037745[52] = 0;
   out_5106753700937037745[53] = 0;
   out_5106753700937037745[54] = 0;
   out_5106753700937037745[55] = 0;
   out_5106753700937037745[56] = 0;
   out_5106753700937037745[57] = 0;
   out_5106753700937037745[58] = 0;
   out_5106753700937037745[59] = 0;
   out_5106753700937037745[60] = 0;
   out_5106753700937037745[61] = 0;
   out_5106753700937037745[62] = 1;
   out_5106753700937037745[63] = 0;
   out_5106753700937037745[64] = 0;
   out_5106753700937037745[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_1920292565159361144) {
  H(in_vec, out_1920292565159361144);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_8960971141736065854) {
  err_fun(nom_x, delta_x, out_8960971141736065854);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_6092473996019335073) {
  inv_err_fun(nom_x, true_x, out_6092473996019335073);
}
void live_H_mod_fun(double *state, double *out_6450239707838081688) {
  H_mod_fun(state, out_6450239707838081688);
}
void live_f_fun(double *state, double dt, double *out_7416629977670457027) {
  f_fun(state,  dt, out_7416629977670457027);
}
void live_F_fun(double *state, double dt, double *out_64636203677338758) {
  F_fun(state,  dt, out_64636203677338758);
}
void live_h_4(double *state, double *unused, double *out_4229943665795564963) {
  h_4(state, unused, out_4229943665795564963);
}
void live_H_4(double *state, double *unused, double *out_6822771310761048891) {
  H_4(state, unused, out_6822771310761048891);
}
void live_h_9(double *state, double *unused, double *out_2084672950082204567) {
  h_9(state, unused, out_2084672950082204567);
}
void live_H_9(double *state, double *unused, double *out_7063960957390639536) {
  H_9(state, unused, out_7063960957390639536);
}
void live_h_10(double *state, double *unused, double *out_5476039309526243161) {
  h_10(state, unused, out_5476039309526243161);
}
void live_H_10(double *state, double *unused, double *out_4889185259062790022) {
  H_10(state, unused, out_4889185259062790022);
}
void live_h_12(double *state, double *unused, double *out_3198692804067788211) {
  h_12(state, unused, out_3198692804067788211);
}
void live_H_12(double *state, double *unused, double *out_7443870335808642558) {
  H_12(state, unused, out_7443870335808642558);
}
void live_h_35(double *state, double *unused, double *out_1218819416543384806) {
  h_35(state, unused, out_1218819416543384806);
}
void live_H_35(double *state, double *unused, double *out_8257310705575895349) {
  H_35(state, unused, out_8257310705575895349);
}
void live_h_32(double *state, double *unused, double *out_1140620113963710055) {
  h_32(state, unused, out_1140620113963710055);
}
void live_H_32(double *state, double *unused, double *out_3274568864439539911) {
  H_32(state, unused, out_3274568864439539911);
}
void live_h_13(double *state, double *unused, double *out_6838285208320409473) {
  h_13(state, unused, out_6838285208320409473);
}
void live_H_13(double *state, double *unused, double *out_765406635205951091) {
  H_13(state, unused, out_765406635205951091);
}
void live_h_14(double *state, double *unused, double *out_2084672950082204567) {
  h_14(state, unused, out_2084672950082204567);
}
void live_H_14(double *state, double *unused, double *out_7063960957390639536) {
  H_14(state, unused, out_7063960957390639536);
}
void live_h_33(double *state, double *unused, double *out_1760391852948304019) {
  h_33(state, unused, out_1760391852948304019);
}
void live_H_33(double *state, double *unused, double *out_5106753700937037745) {
  H_33(state, unused, out_5106753700937037745);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
